#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВидДоговора") <> Перечисления.ВидыДоговоровКонтрагентов.АбоненскоеОбслуживание Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Вид договора должен быть ""Абонентсткое обслуживание"".";
		Сообщение.Поле = "Договор";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();   
		Отказ = Истина; 
	КонецЕсли;  
	
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_НачалаДействия") > Дата ИЛИ  ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВКМ_ОкончанияДействия") < Дата Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Не действующий договор: %1. Не удалось провести документ.", Договор));
		Отказ = Истина; 
	КонецЕсли; 

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения) 
	
	Если ОбменДанными.Загрузка Тогда
     	Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ДатаПроведенияРабот") <> ДатаПроведенияРабот Или 
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ВремяНачалаРабот") <> ВремяНачалаРабот Или 
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Специалист") <> Специалист Тогда
		ЗаказИзмененНужное = Истина;
	Иначе
		ЗаказИзмененНужное = Ложь;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЗаказИзмененНужное", ЗаказИзмененНужное);		  
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи); 
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)   
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист,
		|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_ЦенаЧасаРаботы КАК ДоговорВКМ_ЦенаЧасаРаботы,
		|	СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК ЧасыКОплатеКлиенту
		|ПОМЕСТИТЬ ВТ_Док
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|		ПО ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка = ВКМ_ОбслуживаниеКлиента.Ссылка
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОбслуживаниеКлиента.Специалист,
		|	ВКМ_ОбслуживаниеКлиента.Договор.ВКМ_ЦенаЧасаРаботы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот
		|ПОМЕСТИТЬ ВТ_ПроцентСотрудника
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&ДатаНачало, Сотрудник = &Сотрудник) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Док.Специалист КАК Специалист,
		|	ЕСТЬNULL(ВТ_ПроцентСотрудника.ПроцентОтРабот, НЕОПРЕДЕЛЕНО) КАК ПроцентОтРабот,
		|	ВТ_Док.ДоговорВКМ_ЦенаЧасаРаботы КАК ЦенаЧаса,
		|	ВТ_Док.ЧасыКОплатеКлиенту КАК КолвоЧасов
		|ИЗ
		|	ВТ_Док КАК ВТ_Док
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроцентСотрудника КАК ВТ_ПроцентСотрудника
		|		ПО ВТ_Док.Специалист = ВТ_ПроцентСотрудника.Сотрудник";
	
	Запрос.УстановитьПараметр("ДатаНачало", Дата);
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Выборка.Следующий();
		
		ЧасовКОплатеКлиенту = Выборка.КолвоЧасов;
		СтавкаЧасаКлиента = Выборка.ЦенаЧаса;
		ПроцентОтРабот = Выборка.ПроцентОтРабот;
		
		Если  ПроцентОтРабот = Неопределено Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Сотрудник: %1 не указана процентная ставка в условиях оплаты. Не удалось провести документ.", Выборка.Специалист));
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		//регистр ВКМ_ВыполненныеКлиентуРаботы 
		Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;	
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Договор = Договор;
		Движение.Количество = ЧасовКОплатеКлиенту;
		Движение.Сумма = ЧасовКОплатеКлиенту*СтавкаЧасаКлиента;
		
		//регистр ВКМ_ВыполненныеСотрудникомРаботы
		Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Сотрудник = Специалист;
		Движение.ЧасовКОплате = ЧасовКОплатеКлиенту;
		Движение.СуммаКОплате = ЧасовКОплатеКлиенту*СтавкаЧасаКлиента*ПроцентОтРабот/100;
		
	Иначе
		ОбщегоНазначения.СообщитьПользователю("Отсутствуют Работы. Не удалось провести документ.");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
     	Возврат;
	КонецЕсли;

	Если ДополнительныеСвойства.ЭтоНовый Тогда
		
		ТекстСообщения = СтрШаблон("Новый заказ №%1 Исполнитель назначен: %2. Дата: %3 Время %4:%5", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Номер),Специалист, Формат(ДатаПроведенияРабот, "ДЛФ=Д"),Формат(ВремяНачалаРабот, "ДФ=Ч"), Формат(ВремяНачалаРабот, "ДФ=мм"));
		СпрОбъект = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент(); 
		СпрОбъект.ТекстСообщения = ТекстСообщения;
		СпрОбъект.Записать(); 
	
	ИначеЕсли ДополнительныеСвойства.ЗаказИзмененНужное Тогда   
		
		ТекстСообщения = СтрШаблон("Заказ №%1 изменен!!! Исполнитель назначен: %2. Дата: %3 Время %4:%5", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Номер),Специалист, Формат(ДатаПроведенияРабот, "ДЛФ=Д"), Формат(ВремяНачалаРабот, "ДФ=Ч"),Формат(ВремяНачалаРабот, "ДФ=мм"));
		СпрОбъект = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент(); 
		СпрОбъект.ТекстСообщения = ТекстСообщения;
		СпрОбъект.Записать(); 
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
